int main() {
    int n,c=0;
    cin>>n;
    do
    {
        n=n/10;
        c++;
    }while(n!=0);
    cout<<c;
}
//-----------------------------------------------
    if(n==0)
    {
        cout<<"1";
        return 0;
    }
    for(;n!=0;)
    {
        c++;
        n/=10;
    }  
    cout<<c;
//----------------------------------------------------
#include<stdio.h>
int main() {
    int n,z;
    scanf("%d",&n);
    z=printf("%d",n);
    printf("\n%d",z);
}
-------------------------------------------------------
    if(n==0)
    {
        cout<<"1";
        return 0;
    }
    for(;n!=0;c++,n/=10);
    cout<<c;
//---------------------------------------------------
    c=floor(log10(n))+1;
    cout<<c;
//--------------------------------------------------
#include<math.h>
int fun(int,int);
int main() {
    int n,c=0;
    cin>>n;
    cout<<fun(n,c);
}
int fun(int n,int c)
{
    if(n!=0)
    {
        c++;
        return fun(n/10,c);
    }
    
    return c;
}
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
1st countNumbers(7644) function call:
if (7644 != 0) {
   count = 0 + 1 = 1
   return fun( 7644 / 10,1)
   // Returning the quotient 764
}
2nd countNumbers(764) function call:
if (764 != 0) {
   count = 1 + 1 = 2
   return fun(764 / 10,2)
   // Returning the quotient 76
}
3rd countNumbers(76) function call:
if (76 != 0) {
   count = 2 + 1 = 3
   return fun( 76 / 10,3)
   // Returning the quotient 7
}
4th countNumbers(7) function call:
if (7 != 0) {
   count = 3 + 1 = 4
   return funs(7 / 10,4)
   // Returning the quotient 0
}
5th countNumbers(0) function call:
// Here condition is false so the recursive call of the function is stop and return the count.
if (0 != 0)  {
   count = count + 1 
   return countNumbers(n / 10,cont)
}
return count // Returning count = 4
------------------------------------------------------------------------------------------------------------------------------------------------------
